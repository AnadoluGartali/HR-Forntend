{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ebube\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\HRFront-main\\\\src\\\\components\\\\InventoryManagement\\\\InventoryForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axiosInstance from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InventoryForm = ({\n  inventory,\n  onSubmit,\n  onCancel\n}) => {\n  _s();\n  const [selectedType, setSelectedType] = useState('');\n  const [formData, setFormData] = useState({\n    id: null,\n    brand: '',\n    model: '',\n    serialNumber: '',\n    entryDate: new Date(),\n    assignmentType: 'Unassigned'\n  });\n  const [inventoryTypes, setInventoryTypes] = useState([]);\n  useEffect(() => {\n    fetchInventoryTypes();\n    if (inventory) {\n      setFormData({\n        ...inventory,\n        entryDate: new Date(inventory.entryDate)\n      });\n      setSelectedType(inventory.type ? inventory.type.name : '');\n    }\n  }, [inventory]);\n  const fetchInventoryTypes = async () => {\n    try {\n      const response = await axiosInstance.get('/api/inventory-types');\n      setInventoryTypes(response.data);\n    } catch (error) {\n      console.error('Error fetching inventory types:', error);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n  const handleTypeChange = e => {\n    setSelectedType(e.target.value);\n  };\n  const handleDateChange = date => {\n    setFormData({\n      ...formData,\n      entryDate: date\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const selectedTypeObj = inventoryTypes.find(type => type.name === selectedType);\n    onSubmit({\n      ...formData,\n      type: selectedTypeObj\n    }, selectedTypeObj ? selectedTypeObj.id : null);\n  };\n  const formStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    gap: '15px',\n    padding: '20px',\n    backgroundColor: '#f8f5f9',\n    borderRadius: '10px'\n  };\n  const inputStyle = {\n    padding: '10px',\n    fontSize: '16px',\n    border: '2px solid #b392ac',\n    borderRadius: '5px'\n  };\n  const buttonStyle = {\n    backgroundColor: '#735d78',\n    color: 'white',\n    border: 'none',\n    padding: '10px 15px',\n    borderRadius: '5px',\n    cursor: 'pointer',\n    fontSize: '16px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    style: formStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"type\",\n      value: selectedType,\n      onChange: handleTypeChange,\n      required: true,\n      style: inputStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Inventory Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), inventoryTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type.name,\n        children: type.name\n      }, type.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"brand\",\n      placeholder: \"Brand\",\n      value: formData.brand,\n      onChange: handleChange,\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"model\",\n      placeholder: \"Model\",\n      value: formData.model,\n      onChange: handleChange,\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"serialNumber\",\n      placeholder: \"Serial Number\",\n      value: formData.serialNumber,\n      onChange: handleChange,\n      required: true,\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n      selected: formData.entryDate,\n      onChange: handleDateChange,\n      dateFormat: \"yyyy-MM-dd\",\n      customInput: /*#__PURE__*/_jsxDEV(\"input\", {\n        style: inputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: buttonStyle,\n        children: [inventory ? 'Update' : 'Add', \" Inventory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onCancel,\n        style: {\n          ...buttonStyle,\n          backgroundColor: '#b392ac',\n          marginLeft: '10px'\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(InventoryForm, \"0nEDdM0sJwua+oP6biq7p7dYV+o=\");\n_c = InventoryForm;\nexport default InventoryForm;\nvar _c;\n$RefreshReg$(_c, \"InventoryForm\");","map":{"version":3,"names":["React","useState","useEffect","DatePicker","axiosInstance","jsxDEV","_jsxDEV","InventoryForm","inventory","onSubmit","onCancel","_s","selectedType","setSelectedType","formData","setFormData","id","brand","model","serialNumber","entryDate","Date","assignmentType","inventoryTypes","setInventoryTypes","fetchInventoryTypes","type","name","response","get","data","error","console","handleChange","e","value","target","handleTypeChange","handleDateChange","date","handleSubmit","preventDefault","selectedTypeObj","find","formStyle","display","flexDirection","gap","padding","backgroundColor","borderRadius","inputStyle","fontSize","border","buttonStyle","color","cursor","style","children","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","map","placeholder","selected","dateFormat","customInput","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/Ebube/OneDrive/Masaüstü/HRFront-main/src/components/InventoryManagement/InventoryForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport axiosInstance from '../../api';\n\nconst InventoryForm = ({ inventory, onSubmit, onCancel }) => {\n    const [selectedType, setSelectedType] = useState('');\n    const [formData, setFormData] = useState({\n        id: null,\n        brand: '',\n        model: '',\n        serialNumber: '',\n        entryDate: new Date(),\n        assignmentType: 'Unassigned',\n    });\n    const [inventoryTypes, setInventoryTypes] = useState([]);\n\n    useEffect(() => {\n        fetchInventoryTypes();\n        if (inventory) {\n            setFormData({\n                ...inventory,\n                entryDate: new Date(inventory.entryDate),\n            });\n            setSelectedType(inventory.type ? inventory.type.name : '');\n        }\n    }, [inventory]);\n\n    const fetchInventoryTypes = async () => {\n        try {\n            const response = await axiosInstance.get('/api/inventory-types');\n            setInventoryTypes(response.data);\n        } catch (error) {\n            console.error('Error fetching inventory types:', error);\n        }\n    };\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({ ...formData, [name]: value });\n    };\n\n    const handleTypeChange = (e) => {\n        setSelectedType(e.target.value);\n    };\n\n    const handleDateChange = (date) => {\n        setFormData({ ...formData, entryDate: date });\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const selectedTypeObj = inventoryTypes.find(type => type.name === selectedType);\n        onSubmit({ ...formData, type: selectedTypeObj }, selectedTypeObj ? selectedTypeObj.id : null);\n    };\n\n    const formStyle = {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: '15px',\n        padding: '20px',\n        backgroundColor: '#f8f5f9',\n        borderRadius: '10px',\n    };\n\n    const inputStyle = {\n        padding: '10px',\n        fontSize: '16px',\n        border: '2px solid #b392ac',\n        borderRadius: '5px',\n    };\n\n    const buttonStyle = {\n        backgroundColor: '#735d78',\n        color: 'white',\n        border: 'none',\n        padding: '10px 15px',\n        borderRadius: '5px',\n        cursor: 'pointer',\n        fontSize: '16px',\n    };\n\n    return (\n        <form onSubmit={handleSubmit} style={formStyle}>\n            <select\n                name=\"type\"\n                value={selectedType}\n                onChange={handleTypeChange}\n                required\n                style={inputStyle}\n            >\n                <option value=\"\">Select Inventory Type</option>\n                {inventoryTypes.map((type) => (\n                    <option key={type.id} value={type.name}>{type.name}</option>\n                ))}\n            </select>\n            <input\n                type=\"text\"\n                name=\"brand\"\n                placeholder=\"Brand\"\n                value={formData.brand}\n                onChange={handleChange}\n                required\n                style={inputStyle}\n            />\n            <input\n                type=\"text\"\n                name=\"model\"\n                placeholder=\"Model\"\n                value={formData.model}\n                onChange={handleChange}\n                required\n                style={inputStyle}\n            />\n            <input\n                type=\"text\"\n                name=\"serialNumber\"\n                placeholder=\"Serial Number\"\n                value={formData.serialNumber}\n                onChange={handleChange}\n                required\n                style={inputStyle}\n            />\n            <DatePicker\n                selected={formData.entryDate}\n                onChange={handleDateChange}\n                dateFormat=\"yyyy-MM-dd\"\n                customInput={<input style={inputStyle} />}\n            />\n            <div>\n                <button type=\"submit\" style={buttonStyle}>\n                    {inventory ? 'Update' : 'Add'} Inventory\n                </button>\n                <button\n                    type=\"button\"\n                    onClick={onCancel}\n                    style={{...buttonStyle, backgroundColor: '#b392ac', marginLeft: '10px'}}\n                >\n                    Cancel\n                </button>\n            </div>\n        </form>\n    );\n};\n\nexport default InventoryForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}